#!/usr/bin/env python3

import board
import neopixel
import time
import requests
from bs4 import BeautifulSoup as BS

# NeoPixel LED Configuration
LED_COUNT                       = 50                            # Number of LED pixels.
LED_PIN                         = board.D18                     # GPIO pin connected to the pixels (18 is PCM)
LED_BRIGHTNESS                  = 0.5                           # Float from 0.0 (min) to 1.0 (max)
LED_ORDER                       = neopixel.GRB                  # Strip type and colour ordering

#Set LED colors based on status
COLOR_OPEN                  = (255,0,0)  # Green
COLOR_CLOSED              = (0,255,0)      # Red
COLOR_HOLD                  = (0,175,255)    # Yellow
COLOR_SCHEDULED         = (0,0,255)            # Blue
COLOR_CLEAR                 = (255,255,255)      #Clear

# Initialize the LED strip
pixels = neopixel.NeoPixel(LED_PIN, LED_COUNT, brightness = LED_BRIGHTNESS, pixel_order = LED_ORDER, auto_write = Fa$

# Retrieve html from page of the resort
source = requests.get('https://liftie.info/resort/steamboat').text
soup = BS(source, 'lxml')

# Retrieve names and statuses
basics = soup.find('div', {'class': 'lifts-status'})
###print(basics.prettify())
for l_n in soup.find_all('span', {'class': 'name'}):
        lift_names = l_n.text
        #print(l_n.text)
for l_s in soup.find_all('span', {'class': 'status'}):
        lift_statuses = l_s
        #print(l_s)

# Initializing LED setting
i = 0
#       for lift_n in lift_names:
                # Skip NULL entries
#               if lift_n == "NULL":
#                       i = i + 1
#                       continue

#               color = COLOR_CLEAR

                #if conditions != None:
# Rough draft line search and LED assignment
with lift_statuses as s:
        for line in s:
                if "open" in line:
                        color = COLOR_OPEN
                elif "closed" in line:
                        color = COLOR_CLOSED
                elif "hold" in line:
                        color = COLOR_HOLD
                elif "scheduled" in line:
                        color = COLOR_SCHEDULED
                else:
                        color = COLOR_CLEAR
        print("Setting LED " + str(i) + " for " + lift_name + " to " + str(color))
        pixels[i] = color
        i += 1

#Updates all LEDs at once
        pixels.show()

print()
print("done")

		
